variables:
  GIT_STRATEGY: fetch
  GIT_SUBMODULE_STRATEGY: none

stages:
  - build

.sdk-build: &sdk-build
  stage: build
  image: ubuntu:18.04
  before_script:
    - apt-get update -qq
    - apt-get install -y -qq cmake git g++ build-essential ninja-build
    - apt-get install -y libxkbcommon-dev libwayland-dev libmirclient-dev libxrandr-dev
    - apt-get install -y libx11-xcb-dev libxcb-keysyms1 libxcb-keysyms1-dev libxcb-ewmh-dev
    - apt-get install -y libxcb-randr0-dev
    - apt-get install -y python3 python3-distutils
    - git submodule sync
    - git submodule update --init

  script:
    - mkdir build
    - cd build
    - cmake --version
    - cmake -G Ninja --config $CMAKE_BUILD_TYPE ..
    - cmake --build .

sdk-build-debug:
  variables:
    CMAKE_BUILD_TYPE: Debug
  <<: *sdk-build

# .windows-build-script:
#   script: &windows-build-script
#     - set
#     - git clean -fdx
#     - call %CI_PROJECT_DIR%/.ci/setup-vs2017.bat
#     - call %CI_PROJECT_DIR%/.ci/run-windows-build.bat

# win64-debug-ninja:
#   stage: build
#   tags:
#     - windows
#   variables:
#     CMAKE_GENERATOR: "Ninja"
#     CMAKE_BUILD_TYPE: "Debug"
#     BUILD_ARCH: "x64"
#   script: *windows-build-script

# win32-debug-ninja:
#   stage: build
#   tags:
#     - windows
#   variables:
#     CMAKE_GENERATOR: "Ninja"
#     CMAKE_BUILD_TYPE: "Debug"
#     BUILD_ARCH: "x86"
#   script: *windows-build-script

# win64-relwithdebinfo-ninja:
#   stage: build
#   tags:
#     - windows
#   variables:
#     CMAKE_GENERATOR: "Ninja"
#     CMAKE_BUILD_TYPE: "RelWithDebInfo"
#     BUILD_ARCH: "x64"
#   script: *windows-build-script

# win32-relwithdebinfo-ninja:
#   stage: build
#   tags:
#     - windows
#   variables:
#     CMAKE_GENERATOR: "Ninja"
#     CMAKE_BUILD_TYPE: "RelWithDebInfo"
#     BUILD_ARCH: "x86"
#   script: *windows-build-script

# win64-release-ninja:
#   stage: build
#   tags:
#     - windows
#   variables:
#     CMAKE_GENERATOR: "Ninja"
#     CMAKE_BUILD_TYPE: "Release"
#     BUILD_ARCH: "x64"
#   script: *windows-build-script

# win32-release-ninja:
#   stage: build
#   tags:
#     - windows
#   variables:
#     CMAKE_GENERATOR: "Ninja"
#     CMAKE_BUILD_TYPE: "Release"
#     BUILD_ARCH: "x64"
#   script: *windows-build-script

# win64-debug-sln:
#   stage: build
#   tags:
#     - windows
#   variables:
#     CMAKE_GENERATOR: "Visual Studio 15 2017 Win64"
#     CMAKE_BUILD_TYPE: "Debug"
#     EXTRA_BUILD_ARGS: "-- /m"
#   script: *windows-build-script

# win32-debug-sln:
#   stage: build
#   tags:
#     - windows
#   variables:
#     CMAKE_GENERATOR: "Visual Studio 15 2017"
#     CMAKE_BUILD_TYPE: "Debug"
#     EXTRA_BUILD_ARGS: "-- /m"
#   script: *windows-build-script

# win64-relwithdebinfo-sln:
#   stage: build
#   tags:
#     - windows
#   variables:
#     CMAKE_GENERATOR: "Visual Studio 15 2017 Win64"
#     CMAKE_BUILD_TYPE: "RelWithDebInfo"
#     EXTRA_BUILD_ARGS: "-- /m"
#   script: *windows-build-script

# win32-relwithdebinfo-sln:
#   stage: build
#   tags:
#     - windows
#   variables:
#     CMAKE_GENERATOR: "Visual Studio 15 2017"
#     CMAKE_BUILD_TYPE: "RelWithDebInfo"
#     EXTRA_BUILD_ARGS: "-- /m"
#   script: *windows-build-script

# win64-release-sln:
#   stage: build
#   tags:
#     - windows
#   variables:
#     CMAKE_GENERATOR: "Visual Studio 15 2017 Win64"
#     CMAKE_BUILD_TYPE: "Release"
#     EXTRA_BUILD_ARGS: "-- /m"
#   script: *windows-build-script

# win32-release-sln:
#   stage: build
#   tags:
#     - windows
#   variables:
#     CMAKE_GENERATOR: "Visual Studio 15 2017"
#     CMAKE_BUILD_TYPE: "Release"
#     EXTRA_BUILD_ARGS: "-- /m"
#   script: *windows-build-script
